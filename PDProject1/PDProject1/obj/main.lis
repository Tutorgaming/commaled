                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\IEUser\DOCUME~1\PSOCDE~1.4PR\PDPROJ~1\PDPROJ~1\main.c
 0000                   .dbfunc e main _main fV
 0000           ;            dat -> X+1
 0000           ;            cnt -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3802              add SP,2
 0004                   .dbline 34
 0004           ; //----------------------------------------------------------------------------
 0004           ; // C main line
 0004           ; //----------------------------------------------------------------------------
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; #include <string.h>
 0004           ; 
 0004           ; // Port_0_0 - Port_0_5 are the 6 led pins
 0004           ; #define TOP_BLUE (1 << 4)
 0004           ; #define TOP_RED (1 << 2)
 0004           ; #define TOP_GREEN (1 << 0)
 0004           ; 
 0004           ; #define BOT_BLUE (1 << 5)
 0004           ; #define BOT_RED (1 << 3)
 0004           ; #define BOT_GREEN (1 << 1)
 0004           ; 
 0004           ; // intensities
 0004           ; unsigned char inten[6];
 0004           ; 
 0004           ; #pragma  ioport   EP1DATA_0:    0x058
 0004           ; BYTE              EP1DATA_0;
 0004           ; #pragma  ioport   EP1DATA_1:    0x059
 0004           ; BYTE              EP1DATA_1;
 0004           ; #pragma  ioport   EP1DATA_2:    0x05A
 0004           ; BYTE              EP1DATA_2;
 0004           ; #pragma  ioport   EP1DATA_3:    0x05B
 0004           ; BYTE              EP1DATA_3;
 0004           ; #pragma  ioport   EP1DATA_4:    0x05C
 0004           ; BYTE              EP1DATA_4;
 0004           ; #pragma  ioport   EP1DATA_5:    0x05D
 0004           ; BYTE              EP1DATA_5;
 0004           ; 
 0004           ; void main(void) {
 0004                   .dbline 38
 0004           ;       unsigned char cnt, dat;
 0004           ;       
 0004           ;       // init intensities
 0004           ;       memset(inten, 0, 6);
 0004 5000              mov A,0
 0006 08                push A
 0007 5006              mov A,6
 0009 08                push A
 000A 5000              mov A,0
 000C 08                push A
 000D 08                push A
 000E 5000              mov A,>_inten
 0010 08                push A
 0011 5000              mov A,<_inten
 0013 08                push A
 0014 7C0000            xcall _memset
 0017 38FA              add SP,-6
 0019                   .dbline 47
 0019           ;       
 0019           ;       // testing
 0019           ;       //inten[0] = 10;
 0019           ;       
 0019           ;       // enable sleep timer
 0019           ;       //INT_MSK0 |= INT_MSK0_SLEEP;
 0019           ;       
 0019           ;       // enable all interrupts
 0019           ;       M8C_EnableGInt;
 0019 7101                      or  F, 01h
 001B           
 001B                   .dbline 50
 001B           ;       
 001B           ;       // wait for enumeration
 001B           ;       USB_Start(0);
 001B 10                push X
 001C 5000              mov A,0
 001E 7C0000            xcall _USB_Start
 0021 20                pop X
 0022           L3:
 0022                   .dbline 51
 0022           ;       while (!USB_bGetConfiguration()){}
 0022                   .dbline 51
 0022           L4:
 0022                   .dbline 51
 0022 10                push X
 0023 7C0000            xcall _USB_bGetConfiguration
 0026 20                pop X
 0027 3900              cmp A,0
 0029 AFF8              jz L3
 002B                   .dbline 52
 002B           ;       USB_EnableEP(1);
 002B 10                push X
 002C 5001              mov A,1
 002E 7C0000            xcall _USB_EnableEP
 0031 20                pop X
 0032                   .dbline 56
 0032           ;       
 0032           ;       //USB_bReadOutEP
 0032           ;       
 0032           ;       cnt = 0;
 0032 560000            mov [X+0],0
 0035 8063              xjmp L7
 0037           L6:
 0037                   .dbline 57
 0037           ;       while (1) {
 0037                   .dbline 58
 0037           ;               dat = 0;
 0037 560100            mov [X+1],0
 003A                   .dbline 60
 003A           ;               
 003A           ;               if (USB_bGetEPCount(1) == 6) {
 003A 10                push X
 003B 5001              mov A,1
 003D 7C0000            xcall _USB_bGetEPCount
 0040 20                pop X
 0041 3906              cmp A,6
 0043 B019              jnz L9
 0045                   .dbline 61
 0045           ;                       USB_bReadOutEP(1, inten, 6);
 0045                   .dbline 61
 0045 10                push X
 0046 5006              mov A,6
 0048 08                push A
 0049 5000              mov A,>_inten
 004B 08                push A
 004C 5000              mov A,<_inten
 004E 08                push A
 004F 5001              mov A,1
 0051 08                push A
 0052 7C0000            xcall _USB_bReadOutEP
 0055 38FC              add SP,-4
 0057                   .dbline 62
 0057           ;                       USB_EnableEP(1);
 0057 5001              mov A,1
 0059 7C0000            xcall _USB_EnableEP
 005C 20                pop X
 005D                   .dbline 63
 005D           ;               }
 005D           L9:
 005D                   .dbline 66
 005D           ;               
 005D           ;               // 100% isn't possible...err
 005D           ;               if (cnt < inten[0]) dat |= TOP_BLUE;
 005D 5200              mov A,[X+0]
 005F 3A00              cmp A,[_inten]
 0061 D004              jnc L11
 0063           X1:
 0063                   .dbline 66
 0063 2F0110            or [X+1],16
 0066           L11:
 0066                   .dbline 67
 0066           ;               if (cnt < inten[1]) dat |= TOP_RED;
 0066 5200              mov A,[X+0]
 0068 3A01              cmp A,[_inten+1]
 006A D004              jnc L13
 006C           X2:
 006C                   .dbline 67
 006C 2F0104            or [X+1],4
 006F           L13:
 006F                   .dbline 68
 006F           ;               if (cnt < inten[2]) dat |= TOP_GREEN;
 006F 5200              mov A,[X+0]
 0071 3A02              cmp A,[_inten+2]
 0073 D004              jnc L16
 0075           X3:
 0075                   .dbline 68
 0075 2F0101            or [X+1],1
 0078           L16:
 0078                   .dbline 69
 0078           ;               if (cnt < inten[3]) dat |= BOT_BLUE;
 0078 5200              mov A,[X+0]
 007A 3A03              cmp A,[_inten+3]
 007C D004              jnc L19
 007E           X4:
 007E                   .dbline 69
 007E 2F0120            or [X+1],32
 0081           L19:
 0081                   .dbline 70
 0081           ;               if (cnt < inten[4]) dat |= BOT_RED;
 0081 5200              mov A,[X+0]
 0083 3A04              cmp A,[_inten+4]
 0085 D004              jnc L22
 0087           X5:
 0087                   .dbline 70
 0087 2F0108            or [X+1],8
 008A           L22:
 008A                   .dbline 71
 008A           ;               if (cnt < inten[5]) dat |= BOT_GREEN;
 008A 5200              mov A,[X+0]
 008C 3A05              cmp A,[_inten+5]
 008E D004              jnc L25
 0090           X6:
 0090                   .dbline 71
 0090 2F0102            or [X+1],2
 0093           L25:
 0093                   .dbline 73
 0093           ;               
 0093           ;               P0DATA = dat;
 0093 5201              mov A,[X+1]
 0095 6000              mov REG[0],A
 0097                   .dbline 76
 0097           ;               
 0097           ;               // will rollover
 0097           ;               cnt += 1;
 0097 7700              inc [X+0]
 0099                   .dbline 77
 0099           ;       }
 0099           L7:
 0099                   .dbline 57
 0099 8F9D              xjmp L6
 009B           X0:
 009B                   .dbline -2
 009B           L2:
 009B 38FE              add SP,-2
 009D 20                pop X
 009E                   .dbline 0 ; func end
 009E 8FFF              jmp .
 00A0                   .dbsym l dat 1 c
 00A0                   .dbsym l cnt 0 c
 00A0                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile C:\Users\IEUser\DOCUME~1\PSOCDE~1.4PR\PDPROJ~1\PDPROJ~1\main.c
 0000           _inten::
 0000                   .blkb 6
 0006                   .dbsym e inten _inten A[6:6]c
