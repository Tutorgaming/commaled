//*****************************************************************************
//*****************************************************************************
//  FILENAME: USB_1.h
//   Version: 1.90, Updated on 2015/3/4 at 22:20:18
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: USB User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef USB_1_INCLUDE
#define USB_1_INCLUDE

#include <m8c.h>

//-------------------------------------------------
// USB Device type support for the USB_1 API.
//-------------------------------------------------

//-------------------------------------------------
// fastcall16 qualifiers for the USB_1 API.
//-------------------------------------------------
#pragma fastcall16 USB_1_Start
#pragma fastcall16 USB_1_Stop
#pragma fastcall16 USB_1_bCheckActivity
#pragma fastcall16 USB_1_bGetConfiguration
#pragma fastcall16 USB_1_bGetEPState
#pragma fastcall16 USB_1_bGetEPCount
#pragma fastcall16 USB_1_XLoadEP
#pragma fastcall16 USB_1_EnableOutEP
#pragma fastcall16 USB_1_DisableOutEP
#pragma fastcall16 USB_1_EnableEP
#pragma fastcall16 USB_1_DisableEP
#pragma fastcall16 USB_1_Force
#pragma fastcall16 USB_1_Suspend
#pragma fastcall16 USB_1_Resume
#pragma fastcall16 USB_1_bRWUEnabled
#pragma fastcall16 USB_1_bGetEPAckState
#pragma fastcall16 USB_1_SetPowerStatus
#pragma fastcall16 USB_1_bReadOutEP

//-------------------------------------------------
// Prototypes of the USB_1 API.
//-------------------------------------------------
extern void USB_1_Start(BYTE);
extern void USB_1_Stop(void);
extern BYTE USB_1_bCheckActivity(void);
extern BYTE USB_1_bGetConfiguration(void);
extern BYTE USB_1_bGetEPState(BYTE);
extern BYTE USB_1_bGetEPCount(BYTE);
extern void USB_1_XLoadEP(BYTE*);
extern void USB_1_EnableOutEP(BYTE);
extern void USB_1_DisableOutEP(BYTE);
extern void USB_1_EnableEP(BYTE);
extern void USB_1_DisableEP(BYTE);
extern void USB_1_Force(BYTE);
extern void USB_1_Suspend(void);
extern void USB_1_Resume(void);
extern BYTE USB_1_bRWUEnabled(void);
extern BYTE USB_1_bReadOutEP(BYTE bEPNumber, BYTE * pData, BYTE bLength);
extern BYTE USB_1_bGetEPAckState(BYTE bEPNumber);
extern void USB_1_SetPowerStatus(BYTE bPowerStaus);

//-------------------------------------------------
// Constants for USB_1 API's.
//-------------------------------------------------
#define NO_EVENT_ALLOWED               2
#define EVENT_PENDING                  1
#define NO_EVENT_PENDING               0

#define IN_BUFFER_FULL                 NO_EVENT_PENDING
#define IN_BUFFER_EMPTY                EVENT_PENDING
#define OUT_BUFFER_FULL                EVENT_PENDING
#define OUT_BUFFER_EMPTY               NO_EVENT_PENDING

#define USB_FORCE_J                    0x02
#define USB_FORCE_K                    0x01
#define USB_FORCE_SE0                  0x00
#define USB_FORCE_NONE                 0xFF

//-----------------------------------------------
// Transfer Completion Notification
//-----------------------------------------------
#define USB_XFER_IDLE                       0x00
#define USB_XFER_STATUS_ACK                 0x01
#define USB_XFER_PREMATURE                  0x02
#define USB_XFER_ERROR                      0x03

typedef struct {
    BYTE bStatus;
    WORD wLength;  
} T_USB_XFER_STATUS_BLOCK;

//-------------------------------------------------
// USB_1 Global helper variables for speed
//-------------------------------------------------
extern BYTE USB_1_APIEPNumber;
extern BYTE USB_1_APICount;

//-------------------------------------------------
// USB_1 Macro 'Functions'
//-------------------------------------------------
#define USB_1_LoadEP(ep,s,c)    \
    USB_1_APIEPNumber = ep;     \
    USB_1_APICount = c;         \
    USB_1_XLoadEP(s)

#endif
// end of file USB_1.h
